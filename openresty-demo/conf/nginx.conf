worker_processes  1;                # nginx worker 数量
error_log logs/error.log debug;     # 指定错误日志文件路径
events {
    worker_connections 1024;        # 每个worker进程最大1024个连接
}

http {
    # 3s后主动关闭长连接，debug用
    # keepalive_timeout 3s;
    # 定制access日志格式
    log_format access '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$server_addr:$server_port" '
                        '$upstream_addr $upstream_response_time $request_time';
    access_log logs/access.log access;

    # 设置默认 lua 搜索路径，添加 lua 路径
    # 此处写相对路径时，对启动 nginx 的路径有要求，必须在 nginx 目录下启动，不可移植
    # 应使用变量 $prefix 或 ${prefix}，会替换为 nginx 的 prefix path。
    lua_package_path '/Users/yehong/.luarocks/share/lua/5.3/?.lua;;${prefix}lua/?.lua;;';

    # 开启Nginx workers之间共享缓存，缓存名称：my_cache，key+value总大小128K
    lua_shared_dict my_cache 128K;

    # 这里设置为 off，是为了避免每次修改之后都要重新 reload 的麻烦。
    # 在生产环境上务必确保 lua_code_cache 设置成 on。
    lua_code_cache on;

    # http/https协议初始化，主要做一些插件的初始化工作，如启动后台线程定时轮询lua代码是否更新等操作
    init_worker_by_lua_file lua/my_reload/http_worker_init.lua;

    ## 在 OpenResty 里面使用 LuaCov（代码覆盖率检测），只用在 Nginx.conf 中增加 init_by_lua_block（只能放在 http 上下文中）既可 
    # init_by_lua_block {
    #     require 'luacov.tick'
    #     jit.off()
    # }

    include servers/*.conf;
}